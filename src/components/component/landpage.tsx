/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/EMab69cosSP
 */
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { useState } from "react";
import { createClient } from "@supabase/supabase-js";
import { cookies } from 'next/headers';

export function Landpage() {
  const [email, setEmail] = useState('');
  const [submitSuccess, setSubmitSuccess] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleSubmit = async (event) => {
    event.preventDefault();
    console.log(email)
    if(email == '')
    return
    
    const privateKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    if (!privateKey) throw new Error(`Expected env var SUPABASE_SERVICE_ROLE_KEY`)
    const url = process.env.NEXT_PUBLIC_SUPABASE_URL
    if (!url) throw new Error(`Expected env var SUPABASE_URL`)
    const client = createClient(url, privateKey)

    try {
      setIsSubmitting(true);
      const newWaitlistEntry = { email: email, signup_date: new Date().toISOString() };
      const { data, error } = await client.from('waitlist').insert([newWaitlistEntry]);
      if (error) throw error;
      console.log('Success:', data);
      setSubmitSuccess(true);
    } catch (error) {
      console.error('Error:', error);
      setSubmitSuccess(false);
    }
    setIsSubmitting(false);
  };
  return (
    <section className="w-full h-screen bg-gradient-to-r from-gray-100 via-gray-200 to-gray-300 flex flex-row items-center justify-center px-4 md:px-6">
      <div className="absolute bottom-0 right-0 overflow-hidden z-0">
            <img className="w-full h-auto origin-bottom-right transform scale-150 lg:w-auto lg:mx-auto lg:object-cover lg:scale-75" src="https://cdn.rareblocks.xyz/collection/clarity/images/hero/1/background-pattern.png" alt="" />
      </div>
      <div className="flex-1 flex items-center justify-center">
      <img
        alt="Promotional Image"
        className="w-full h-auto max-w-lx object-contain rounded-md"
        src="/bookmarks.png"
        style={{
          aspectRatio: "600/600"
        }}
      />
      </div>
      <div className="flex-1 flex flex-col items-start justify-center space-y-4 text-left pl-10">
        <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-800">ChatterMark</h1>
        <p className="text-lg md:text-xl lg:text-2xl text-gray-600 max-w-[500px]">
          No Bookmark Diving, Just Ask and Effortlessly Access<br />
          Powered by AI. ChatterMark know what you want.<br />
        </p>
        <p />
        <div className="w-full max-w-2xl space-y-2 mt-6 z-10">
          <form className="flex space-x-2" onSubmit={handleSubmit}>
            <Input
              className="md:w-auto  bg-gray-100 border-gray-200 text-gray-700"
              placeholder="Your email"
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
            <Button 
             className="bg-gray-800 text-white hover:bg-gray-700 focus:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-700 focus:ring-opacity-50 transition duration-300 ease-in-out shadow-lg transform hover:scale-105"
             type="submit">
              Join the Waitlist
            </Button>
          </form>
          {!submitSuccess && (
            <p className="text-xs text-gray-500">I won&apos;t send you any spam. I hate it, just like you do.</p>
        )}
          
          {submitSuccess && (
          <p className="text-green-500 mt-4">
            âˆš You&apos;re on the waitlist! We&apos;ll be in touch soon.
          </p>
        )}
        </div>
      </div>

    </section>
    
  )
}
